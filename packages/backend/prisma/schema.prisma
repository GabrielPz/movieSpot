generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PARTICIPANT
  ADMIN
  OWNER
}

model User {
  id       String  @id @default(uuid())
  name     String
  cpf      String  @unique
  email    String  @unique
  phone    String  @unique
  password String
  orders   Order[]
  role     Role    @default(PARTICIPANT)

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  forgotPassword forgotPassword[]

  @@map("users")
}

model Order {
  id                 String          @id @default(uuid())
  user               User            @relation(fields: [userId], references: [id])
  userId             String
  brlValue           Float           @map("brl_value")
  yuanValue          Float           @map("yuan_value")
  userPaymentStatus  String          @default("pending")
  adminPaymentStatus String          @default("pending")
  expireAt           String          @map("expire_at")
  createdAt          DateTime        @default(now()) @map("created_at")
  updatedAt          DateTime        @updatedAt @map("updated_at")
  external_reference String?         @unique @map("external_reference")
  closed             Boolean         @default(false)
  paymentData        Json?
  pixInfo            Json?
  qrCode             QrCode?
  proofOfPayment     ProofOfPayment?

  @@map("orders")
}

model QrCode {
  id        String   @id @default(uuid())
  orderId   String   @unique
  order     Order    @relation(fields: [orderId], references: [id])
  link      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("qrcodes")
}

model ConfigValues {
  id                     String @id @default(uuid())
  yuanPercentageIncrease Float  @map("yuan_percentage_increase")

  @@map("config_values")
}

model ProofOfPayment {
  id        String   @id @default(uuid())
  orderId   String   @unique
  order     Order    @relation(fields: [orderId], references: [id])
  link      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("proofs_of_payment")
}

model forgotPassword {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  userId  String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
