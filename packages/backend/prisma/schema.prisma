generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  ADMIN
  OWNER
}

model User {
  id           String        @id @default(uuid())
  name         String
  cpf          String        @unique
  email        String        @unique
  phone        String        @unique
  password     String
  rentedMovies RentedMovie[]
  wishList     WishList[]
  role         Role          @default(CLIENT)

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  forgotPassword forgotPassword[]

  @@map("users")
}

model Movie {
  id                    String        @id @default(uuid())
  title                 String        @unique
  subTitle              String
  description           String
  duration              Float
  releaseDate           String
  minimumAge            Int
  rentPrice             Float
  category              String[]
  trailerUrl            String
  movieUrl              String
  imageUrl              String
  director              String
  actors                String[]
  producers             String[]
  studio                String
  contentClassification String
  subtitles             String[]
  audioLanguages        String[]
  rating                Float         @default(0)
  createdAt             DateTime      @default(now()) @map("created_at")
  updatedAt             DateTime      @updatedAt @map("updated_at")
  RentedMovie           RentedMovie[]
  WishList              WishList[]

  @@map("movies")
}

model RentedMovie {
  id       String   @id @default(uuid())
  userId   String
  movieId  String
  rentedAt DateTime @default(now())
  dueDate  DateTime

  user  User  @relation(fields: [userId], references: [id])
  movie Movie @relation(fields: [movieId], references: [id])

  @@map("rented_movies")
}

model WishList {
  id      String @id @default(uuid())
  userId  String
  movieId String

  user  User  @relation(fields: [userId], references: [id])
  movie Movie @relation(fields: [movieId], references: [id])

  @@map("wish_list")
}

model forgotPassword {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  userId  String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
